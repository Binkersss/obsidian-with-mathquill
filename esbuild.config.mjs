import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],  // Your main entry point
	bundle: true,  // Bundle everything into a single file
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins
	],
	format: "cjs",  // CommonJS format
	target: "es2018",  // Targeting modern browsers
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",  // Output JavaScript file
	minify: prod,  // Minify in production mode
	assetNames: 'assets/[name]-[hash]',  // Output directory for assets (fonts, images)
	plugins: [],
	loader: {
		'.ts': 'ts',  // TypeScript files
		'.css': 'css',  // CSS files
		'.eot': 'file',  // Font files
		'.ttf': 'file',  // Font files
		'.woff': 'file',  // Font files
		'.woff2': 'file',  // Font files
		'.svg': 'file',  // SVG files
	},
});

// Production mode: Build once and exit
if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	// Development mode: Watch for file changes
	await context.watch();
}